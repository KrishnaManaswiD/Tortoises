We agreed that we would adopt the following standards as a house style:

	- Comments will follow the style used by Dani in his example files.

		‘’'
		<Introduce File / Function>
		‘’'

		‘ One line comment above a function if just get / set / not complicated ‘

		# For comments inside files

	- Class variables will be defined with _ following the variable name (e.g. classVariable_)  this will help alleviate confusion when it comes to assigning parameters sent through a function call that might have the same name.

	- Brief descriptions should be provided before any function calls that change variables; short comments may be posted on the same line as an operational command.

	- Get and set methods should be used as a standard form when communicating with the tortoise object.

	- Comments should be placed before the start of block if / while statements to explain what is happening inside them.

	- All functions should end with a return statement

	- Long lines should be left to wrap around - no need to artificially shorten them.


A few additional notes regarding development:
1.  We agreed that a ‘tortoise’ class should be created and used, in order to keep thing tilted to OOP rather than a procedural entanglement; however, this class will be segregated off into a separate tortoise.py file, and that the main functions to be used by the kids will be held in a separate file.
		This will allow us to create separate files later on for things like overloaded functions / groups of functions for exercises(?)

2.  Parameters for the tortoise can be set / got through function calls, rather than students have to explicitly know what is in the tortoise object.

3.  At the moment, we will continue to ‘hardwire’ enums.  The three of us agreed that Dani’s idea of a config file could be really good, and that we will return and investigate doing this once there is a working tortoise / set of exercises.  This will allow us to understand exactly what would need to go into a config file setup.
	As discussed, going to STEM events in the meantime will allow us to work out how much kids are likely to fiddle with files.
